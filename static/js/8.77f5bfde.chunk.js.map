{"version":3,"sources":["resources/img/UW.png","resources/img/x-men.png","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ComicsList","useState","comicsList","setComicsList","offset","setOffset","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","useMarvelService","loading","error","getComicsList","useEffect","getComics","initial","then","onComicsLoaded","newComicsList","ended","length","items","arr","map","item","i","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"8MAAe,ICAA,I,MCmFAA,EAzEI,WAEf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4CJ,oBAAS,GAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAwCC,cAAjCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,cAEvBC,qBAAU,WACNC,EAAUX,GAAQ,KACnB,IAEH,IAAMW,EAAY,SAACX,EAAQY,GACbT,GAAVS,GACAH,EAAcT,GAAQa,KAAKC,IAGzBA,EAAiB,SAACC,GACpB,IAAIC,GAAQ,EAIeA,EAA3BD,EAAcE,OAAS,EAEvBlB,GAAc,SAAAD,GAAU,4BAAQA,GAAR,YAAuBiB,OAC/CZ,GAAkB,GAClBF,EAAUD,EAAS,GACnBK,EAAeW,IAwBnB,IAAME,EArBN,SAAsBC,GAClB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GAEzB,OACI,oBAAIC,UAAU,eAAd,SACI,eAAC,IAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAA1B,UACI,qBAAKC,IAAKL,EAAKM,UAAWC,IAAKP,EAAKQ,MAAON,UAAU,qBACrD,qBAAKA,UAAU,oBAAf,SAAoCF,EAAKQ,QACzC,qBAAKN,UAAU,qBAAf,SAAqCF,EAAKS,YAJhBT,EAAKI,OAU/C,OACI,oBAAIF,UAAU,eAAd,SACKL,IAKCa,CAAYjC,GACpBkC,EAAexB,EAAQ,cAACyB,EAAA,EAAD,IAAkB,KACzCC,EAAU3B,IAAYL,EAAiB,cAACiC,EAAA,EAAD,IAAa,KAE1D,OACI,sBAAKZ,UAAU,eAAf,UACKS,EACAE,EACAhB,EAED,wBACIkB,SAAUlC,EACVmC,MAAO,CAAC,QAAYjC,EAAc,OAAS,SAC3CkC,QAAS,kBAAM3B,EAAUX,IACzBuB,UAAU,mCAJd,SAKI,qBAAKA,UAAU,QAAf,6B,SCxDDgB,UAhBI,WACf,OACI,qCACI,eAACC,EAAA,EAAD,WACI,sBACIC,KAAK,cACLC,QAAQ,0BAEZ,mDAEJ,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,S,0FCZG,SAASC,EAAmBzB,GACzC,OCJa,SAA4BA,GACzC,GAAI0B,MAAMC,QAAQ3B,GAAM,OAAO,OAAA4B,EAAA,GAAiB5B,GDGzC,CAAkBA,IELZ,SAA0B6B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB7B,IAAQ,OAAAkC,EAAA,GAA2BlC,IGLvE,WACb,MAAM,IAAImC,UAAU,wIHIwE","file":"static/js/8.77f5bfde.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import './comicsList.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [newItemLoading, setNewItemLoading] = useState(false);    //загрузка новых карточек с комиксами\n    const [comicsEnded, setComicsEnded] = useState(false);    //список персонажей комиксами\n\n    const {loading, error, getComicsList} = useMarvelService();\n\n    useEffect(()=> {\n        getComics(offset, true)\n    }, []);\n\n    const getComics = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getComicsList(offset).then(onComicsLoaded);\n    }\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = false;\n        // if(newComicsList.length < 8) {\n        //     ended = true;\n        // }\n        newComicsList.length < 8 ? ended = true : ended = false;\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n\n            return (\n                <li className=\"comics__item\" key={item.id}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            \n            <button \n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                onClick={() => getComics(offset)}\n                className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with comics list\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}